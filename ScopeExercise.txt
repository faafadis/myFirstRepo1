Scope Exercise
1. Determine what this Javascript code will print out (without running it):
                x = 1;
                var a = 5;
                var b = 10;
                var c = function(a, b, c) {
                var x = 10;
                document.write(x);  //i
                document.write(a);  //ii
                var f = function(a, b, c) {
                        b = a;
                        document.write(b);  //iii
                        b = c;
                        var x = 5;
                    }
                f(a,b,c);
                document.write(b);  //iv
             }
            c(8,9,10);
            document.write(b);
            document.write(x);
           
Answers:

            c(8,9,10);     -> 
                                  10  
                                  8  
                                  8  
                                  9             
            document.write(b); -> 10
            document.write(x); -> 1

2. What is the difference between a method and function? 

		Answer  ==> Functions  in javascript are the equivalent  of methods in java  both of them represent the behavior of  an object  Functions are treated as first class citizens  in javascript which makes it a functional programming

3. What does 'this' refer to when used in a Java method? 

		Answer  ==>. This refers to the class in java.

4. What does 'this' refer to when used in a JavaScript method? 

		Answer  ==>     This refers to the object the function is used




5.What does 'this' refer to when used in a JavaScript constructor function?

The value of this, when used in an object, is the object itself.
In a constructor function this does not have a value. It is a substitute for the new object. The value of this will become the new object when a new object is created.
6. Assume object x is the prototype for object y in Javascript. Object x has a method f( ) containing keyword 'this'. When f is called by x.f( ), what does 'this' refer to? 

		 Answer  ==>   “this” is referring  to the object it belongs right now which is y

7. What is a free variable in JavaScript? 

		 Answer  ==>    A free variable is a variable in inner class that is not a local variable or a parameter to the inner nor a global variable but it  is a parameter or local variable of the inclosing  parent function  which is binded with the inner function.


8.Create an object that has properties with name = "fred" and major="music" and a property that is a function that takes 2 numbers and returns the smallest of the two, or the square of the two if they are equal.
                 Answer  ==>  
Var x = { 
	“Name” :“fred”,
	“Major”: “music”,
	function ( a,b){
				if(a>b){
					return b;
				}
				else if(a=b){
						return ((a*a)+(b*b));
						}

				return a;		
			}
	}

            
9. Write Javascript code for creating three Employee objects using the "new" keyword and a constructor function. Employee objects have the following fields: name, salary, position.
                function Employee(name, salary, position) {
                    this.name = name;
                    this.salary = salary;
                    this.position = position;   
                }
                var emp1 = new Employee("fili", 5000, "Software-Developer");
                var emp2 = new Employee("edu", 3000, "Junior-Developer");
                var emp3 = new Employee("Rufi", 9000, "Manager");
            
10. Write a Javascript function that takes any number of input arguments and returns the product of the arguments.
                function product(x, y, ...more) {
                    var total = x * y;
                    if (more.length > 0) {
                      for (var i = 0; i < more.length; i++) {
                        total *= more[i];
                      }
                    }
                    return total;
                  }
            
Another way:

                function productOfArguments() {
                    let i;
                    let productResult = 1;
                    for (i = 0; i < arguments.length; ++i) {
                      productResult *= arguments[i];
                    }
                    return productResult;
                }
            
11. Write an arrow function that returns the maximum of its three input arguments.
                var maxOfThree = (a,b,c) =>{
                    let max = Math.max(a,b);
                    return Math.max(c,max);
                }
            
